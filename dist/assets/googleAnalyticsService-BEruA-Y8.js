import{s as g}from"./supabase-DNr-ekoC.js";import"./data-vendor-wxR4B97s.js";import"./react-vendor-QxjEytrN.js";class y{measurementId;accessToken=null;propertyId=null;clientId=null;tokenClient=null;tokenExpiresAtMs=0;isInitialized=!1;constructor(){this.measurementId="G-SBWLVKVMCN",this.propertyId="498365280",this.clientId="554762763576-mmh5elerqqeua2kfo3td8ut4n0usgqo4.apps.googleusercontent.com",this.propertyId&&(/^\d+$/.test(this.propertyId)||(console.warn("⚠️ GA Property ID format warning:",this.propertyId),console.warn('⚠️ Expected numeric format (e.g., "123456789")')))}async loadGIS(){if(!(typeof window>"u")&&!window.google?.accounts?.oauth2)return new Promise((t,e)=>{const a=document.createElement("script");a.src="https://accounts.google.com/gsi/client",a.async=!0,a.defer=!0,a.onload=()=>t(),a.onerror=()=>e(new Error("Failed to load Google Identity Services")),document.head.appendChild(a)})}async initialize(){try{if(this.isInitialized=!1,!this.propertyId)return console.warn("GA_PROPERTY_ID not set - Google Analytics not configured"),!1;if(!this.clientId)return console.warn("VITE_GA_CLIENT_ID not set - cannot authenticate to Google Analytics Data API"),!1;if(typeof window>"u")return console.warn("Window not available - cannot initialize GA in server environment"),!1;if(await this.loadGIS(),!this.tokenClient){const t=window.google;if(!t?.accounts?.oauth2)throw new Error("Google Identity Services not loaded properly");this.tokenClient=t.accounts.oauth2.initTokenClient({client_id:this.clientId,scope:"https://www.googleapis.com/auth/analytics.readonly",callback:e=>{if(e?.access_token){this.accessToken=e.access_token;const a=Number(e.expires_in||0);this.tokenExpiresAtMs=Date.now()+Math.max(0,a-30)*1e3,console.log("✅ Google Analytics access token obtained")}else e?.error?(console.error("❌ Google Analytics OAuth error:",e.error),e.error==="invalid_client"&&console.error("❌ OAuth client not found. Please check your VITE_GA_CLIENT_ID in .env file and Google Cloud Console configuration.")):console.warn("❌ Google Analytics authentication failed - no access token received")}})}return this.isInitialized=!0,!0}catch(t){return console.error("❌ Failed to initialize Google Analytics:",t),this.isInitialized=!1,!1}}async requestAuthentication(){if(this.isInitialized||await this.initialize(),!this.tokenClient)return console.error("❌ Token client not available"),!1;if(!this.clientId||!this.clientId.includes(".apps.googleusercontent.com"))throw console.error("❌ Invalid OAuth client ID format. Should end with .apps.googleusercontent.com"),new Error("Invalid OAuth client ID format. Please check your VITE_GA_CLIENT_ID in .env file.");return new Promise(t=>{try{this.tokenClient.requestAccessToken(e=>{e?.access_token?(console.log("✅ Access token received from OAuth2 popup"),this.accessToken=e.access_token,this.tokenExpiresAtMs=Date.now()+3600*1e3,t(!0)):(console.log("❌ No access token received from OAuth2 popup"),t(!1))})}catch(e){console.error("❌ Error during OAuth2 authentication:",e),t(!1)}})}async ensureAccessToken(){return this.isInitialized||await this.initialize(),!this.tokenClient||!this.accessToken||Date.now()>=this.tokenExpiresAtMs?!1:!!this.accessToken}async getRealGAData(){try{const t=await this.ensureAccessToken();return!this.propertyId||!t?(console.warn("❌ Google Analytics not fully configured (missing propertyId or access token)"),{sessions:0,users:0,pageViews:0,bounceRate:0,avgSessionDuration:0,conversionRate:0,goalCompletions:0}):await this.getCoreMetrics()}catch(t){return console.error("❌ Error fetching real GA4 data:",t),{sessions:0,users:0,pageViews:0,bounceRate:0,avgSessionDuration:0,conversionRate:0,goalCompletions:0}}}async getCoreMetrics(){if(!this.accessToken||!this.propertyId)throw new Error("Missing access token or property ID");const t=[{startDate:"30daysAgo",endDate:"today"},{startDate:"7daysAgo",endDate:"today"},{startDate:"yesterday",endDate:"today"}],e=[[{name:"sessions"},{name:"totalUsers"},{name:"screenPageViews"},{name:"bounceRate"},{name:"averageSessionDuration"},{name:"conversions"}],[{name:"sessions"},{name:"totalUsers"},{name:"screenPageViews"}],[{name:"sessions"},{name:"totalUsers"}]];let a=null;for(const o of t)for(const i of e)try{const n={dateRanges:[o],metrics:i},s=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(!s.ok){const d=await s.text();console.error("❌ GA API error response:",d),a=new Error(`GA API error: ${s.status} - ${d}`);continue}const l=(await s.json())?.rows||[];if(l.length===0){console.warn("⚠️ No data rows returned, trying next combination...");continue}const c=l[0]?.metricValues||[],u={sessions:parseInt(c[0]?.value||"0"),users:parseInt(c[1]?.value||"0"),pageViews:parseInt(c[2]?.value||"0"),bounceRate:parseFloat(c[3]?.value||"0"),avgSessionDuration:parseFloat(c[4]?.value||"0"),conversionRate:0,goalCompletions:parseInt(c[5]?.value||"0")};return console.log("✅ Successfully got GA data with combination:",{dateRange:o,metrics:i.map(d=>d.name)}),u}catch(n){console.warn("⚠️ Failed with combination:",{dateRange:o,metrics:i.map(s=>s.name)},n),a=n;continue}throw console.error("❌ All GA API combinations failed. Last error:",a),a||new Error("Failed to fetch GA data with any combination")}async getTrafficSources(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return{};try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({dateRanges:[{startDate:"30daysAgo",endDate:"today"}],dimensions:[{name:"sessionSource"}],metrics:[{name:"sessions"}]})});if(!e.ok)return console.warn("Failed to fetch traffic sources:",e.status),{};const a=await e.json(),o={};return(a?.rows||[]).forEach(n=>{const s=n?.dimensionValues?.[0]?.value||"unknown",r=parseInt(n?.metricValues?.[0]?.value||"0");o[s]=r}),o}catch(e){return console.error("Error fetching traffic sources:",e),{}}}async getGeographicData(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return console.warn("❌ Cannot fetch geographic data: No token or property ID"),{countryBreakdown:{},cityBreakdown:[]};try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({dateRanges:[{startDate:"30daysAgo",endDate:"today"}],dimensions:[{name:"country"},{name:"region"},{name:"city"}],metrics:[{name:"sessions"}]})});if(!e.ok){console.warn("❌ Failed to fetch geographic data:",e.status,e.statusText);const s=await e.text();return console.warn("❌ Error response:",s),{countryBreakdown:{},cityBreakdown:[]}}const a=await e.json(),o={},i=[];return(a?.rows||[]).forEach(s=>{const r=s?.dimensionValues?.[0]?.value||"Unknown",l=s?.dimensionValues?.[1]?.value||"Unknown",c=s?.dimensionValues?.[2]?.value||"Unknown",u=parseInt(s?.metricValues?.[0]?.value||"0");r!=="(not set)"&&(o[r]=(o[r]||0)+u),c!=="(not set)"&&c!=="Unknown"&&i.push({country:r,region:l,city:c,sessions:u})}),{countryBreakdown:o,cityBreakdown:i.slice(0,20)}}catch(e){return console.error("❌ Error fetching geographic data:",e),{countryBreakdown:{},cityBreakdown:[]}}}async getDeviceBreakdown(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return{};try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({dateRanges:[{startDate:"30daysAgo",endDate:"today"}],dimensions:[{name:"deviceCategory"}],metrics:[{name:"sessions"}]})});if(!e.ok)return console.warn("Failed to fetch device breakdown:",e.status),{};const a=await e.json(),o={};return(a?.rows||[]).forEach(n=>{const s=n?.dimensionValues?.[0]?.value||"unknown",r=parseInt(n?.metricValues?.[0]?.value||"0");o[s]=r}),o}catch(e){return console.error("Error fetching device breakdown:",e),{}}}async getTopPages(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return[];try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({dateRanges:[{startDate:"30daysAgo",endDate:"today"}],dimensions:[{name:"pagePath"}],metrics:[{name:"screenPageViews"},{name:"bounceRate"}]})});if(!e.ok)return console.warn("Failed to fetch top pages:",e.status),[];const a=await e.json(),o=[];return(a?.rows||[]).forEach(n=>{const s=n?.dimensionValues?.[0]?.value||"unknown",r=parseInt(n?.metricValues?.[0]?.value||"0"),l=parseFloat(n?.metricValues?.[1]?.value||"0");s!=="(not set)"&&s!=="/"&&o.push({page:s,views:r,bounceRate:l})}),o.sort((n,s)=>s.views-n.views).slice(0,10)}catch(e){return console.error("Error fetching top pages:",e),[]}}async getTimeBasedData(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return{hourlyData:{},dailyData:{}};try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({dateRanges:[{startDate:"30daysAgo",endDate:"today"}],dimensions:[{name:"date"}],metrics:[{name:"sessions"}]})});if(!e.ok)return console.warn("Failed to fetch daily data:",e.status),{hourlyData:{},dailyData:{}};const a=await e.json(),o={};return(a?.rows||[]).forEach(n=>{const s=n?.dimensionValues?.[0]?.value||"unknown",r=parseInt(n?.metricValues?.[0]?.value||"0");s!=="(not set)"&&(o[s]=r)}),{hourlyData:{},dailyData:o}}catch(e){return console.error("Error fetching time-based data:",e),{hourlyData:{},dailyData:{}}}}async getEnhancedAnalytics(){try{const t=await this.getRealGAData(),e=await this.getTrafficSources(),a=(await g.from("waitlist_signups").select("*").order("created_at",{ascending:!1})).data||[],o=a.length,i=t.sessions>0?o/t.sessions*100:0,n=t.sessions>0?o/t.sessions*100:0,s=new Set(a.map(p=>p.email)).size,r=t.users>0?s/t.users*100:0,[l,c,u,d]=await Promise.all([this.getGeographicData(),this.getDeviceBreakdown(),this.getTopPages(),this.getTimeBasedData()]);let h={activeUsers:0,pageViews:0,topPages:[],realTimeTraffic:{},realTimeDevices:{}};try{h=await this.getRealTimeData()}catch(p){console.warn("⚠️ Real-time data failed, using fallback:",p),h={activeUsers:t.users||0,pageViews:t.pageViews||0,topPages:u||[],realTimeTraffic:e||{},realTimeDevices:c||{}}}return{totalSessions:t.sessions,totalUsers:t.users,totalPageViews:t.pageViews,avgBounceRate:t.bounceRate,avgSessionDuration:t.avgSessionDuration,trafficSources:e||{},topPages:u||[],deviceBreakdown:c||{},countryBreakdown:l?.countryBreakdown||{},cityBreakdown:l?.cityBreakdown||[],hourlyData:d?.hourlyData||{},dailyData:d?.dailyData||{},realTimeData:h,conversionFunnel:{sessions:t.sessions,pageViews:t.pageViews,waitlistSignups:o,conversionRate:t.conversionRate},enhancedMetrics:{gaToWaitlistRatio:i,waitlistConversionFromGA:n,avgTimeToSignup:0,returningUserSignupRate:r}}}catch(t){throw console.error("❌ Error getting enhanced analytics:",t),t}}async getRealTimeData(){const t=await this.ensureAccessToken();if(!this.propertyId||!t)return{activeUsers:0,pageViews:0,topPages:[],realTimeTraffic:{},realTimeDevices:{}};try{const e=await fetch(`https://analyticsdata.googleapis.com/v1beta/properties/${this.propertyId}:runRealtimeReport`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"},body:JSON.stringify({metrics:[{name:"activeUsers"}]})});if(!e.ok){console.warn("❌ Failed to fetch real-time data:",e.status,e.statusText);const i=await e.text();return console.warn("❌ Real-time error response:",i),{activeUsers:0,pageViews:0,topPages:[],realTimeTraffic:{},realTimeDevices:{}}}const a=await e.json(),o=parseInt(a?.totals?.[0]?.metricValues?.[0]?.value||"0");return{activeUsers:o,pageViews:o,topPages:[],realTimeTraffic:{},realTimeDevices:{}}}catch(e){return console.error("❌ Error fetching real-time data:",e),{activeUsers:0,pageViews:0,topPages:[],realTimeTraffic:{},realTimeDevices:{}}}}async trackCustomEvent(t,e){typeof window<"u"&&window.gtag&&window.gtag("event",t,{...e,custom_parameter_1:e.source,custom_parameter_2:e.deviceType,custom_parameter_3:e.scrollDepth})}async trackWaitlistSignup(t,e,a){await this.trackCustomEvent("waitlist_signup",{email:t,source:e,deviceType:a,event_category:"engagement",event_label:e,value:1})}async trackPageView(t){typeof window<"u"&&window.gtag&&window.gtag("config",this.measurementId,{page_title:t,page_location:window.location.href})}isConfigured(){return!!(this.propertyId&&this.clientId&&this.measurementId)}isAuthenticated(){return!!(this.accessToken&&Date.now()<this.tokenExpiresAtMs)}async debugDataAvailability(){const t=await this.ensureAccessToken(),e=!!this.propertyId;let a=null,o=!1,i=!1,n=null;try{if(t&&e){a=await this.getRealGAData(),o=!0;try{const r=await this.getTrafficSources();i=Object.keys(r).length>0}catch(r){console.warn("Advanced data fetch failed:",r)}try{n=await this.getRealTimeData()}catch(r){console.warn("Real-time data fetch failed:",r),n={error:r.message||"Unknown error"}}}}catch(s){console.error("Basic data fetch failed:",s)}return{hasToken:t,hasPropertyId:e,canFetchBasic:o,canFetchAdvanced:i,basicDataSample:a,realTimeTest:n}}getAuthStatus(){return{configured:this.isConfigured(),authenticated:this.isAuthenticated(),initialized:this.isInitialized}}getSetupInstructions(){return`
🚀 Google Analytics Setup Instructions:

1. Create Google Cloud Project:
   - Go to https://console.cloud.google.com
   - Create new project or select existing
   - Enable Google Analytics Data API

2. Set up OAuth2 credentials:
   - Go to APIs & Services > Credentials
   - Create OAuth 2.0 Client ID
   - Download credentials JSON

3. Get your GA4 Property ID:
   - Go to Google Analytics
   - Admin > Property Settings
   - Copy Property ID (format: 123456789)

4. Set environment variables:
   VITE_GA_PROPERTY_ID=your_property_id
   VITE_GA_MEASUREMENT_ID=G-XXXXXXXXXX
   VITE_GA_CLIENT_ID=your_oauth_client_id

5. Configure Google Analytics:
   - Set up GA4 property
   - Configure OAuth2 authentication
   - Add environment variables

Current Status: Using real GA API calls with OAuth2 authentication
    `}}const v=new y;export{v as googleAnalyticsService};
