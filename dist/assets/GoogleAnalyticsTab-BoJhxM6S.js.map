{"version":3,"mappings":"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","names":["BuildingOfficeIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","DeviceTabletIcon","GeographicAnalytics","data","loading","jsx","jsxs","sortedCountries","b","sortedCities","GlobeAltIcon","country","sessions","index","intensity","s","positions","MapPinIcon","percentage","flag","getCountryFlag","cityData","DeviceAnalytics","sortedDevices","a","totalSessions","getDeviceInfo","device","ComputerDesktopIcon","DevicePhoneMobileIcon","ChartBarIcon","deviceInfo","IconComponent","GA_MEASUREMENT_ID","GA_PROPERTY_ID","GA_CLIENT_ID","GoogleAnalyticsTab","analyticsData","setAnalyticsData","useState","setLoading","error","setError","gaData","setGaData","useEffect","fetchGoogleAnalyticsData","googleAnalyticsService","__vitePreload","n","enhancedAnalytics","realTimeData","realData","source","activeTab","setActiveTab","debugInfo","tab","EyeIcon","UsersIcon","ArrowTrendingUpIcon","ClockIcon","page","activity"],"ignoreList":[0,1],"sources":["../../node_modules/@heroicons/react/24/outline/esm/BuildingOfficeIcon.js","../../node_modules/@heroicons/react/24/outline/esm/DeviceTabletIcon.js","../../src/components/admin/GeographicAnalytics.tsx","../../src/components/admin/DeviceAnalytics.tsx","../../src/components/admin/GoogleAnalyticsTab.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction BuildingOfficeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BuildingOfficeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction DeviceTabletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5h3m-6.75 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-15a2.25 2.25 0 0 0-2.25-2.25H6.75A2.25 2.25 0 0 0 4.5 4.5v15a2.25 2.25 0 0 0 2.25 2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DeviceTabletIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { MapPinIcon, GlobeAltIcon, BuildingOfficeIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface GeographicData {\r\n  countryBreakdown: Record<string, number>;\r\n  cityBreakdown: Array<{\r\n    country: string;\r\n    region: string;\r\n    city: string;\r\n    sessions: number;\r\n  }>;\r\n}\r\n\r\ninterface GeographicAnalyticsProps {\r\n  data: GeographicData;\r\n  loading?: boolean;\r\n}\r\n\r\nconst GeographicAnalytics: React.FC<GeographicAnalyticsProps> = ({ data, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-16 h-16 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin mx-auto mb-4\"></div>\r\n            <div className=\"text-blue-400\">Loading geographic data...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Sort countries by sessions\r\n  const sortedCountries = Object.entries(data.countryBreakdown)\r\n    .sort(([, a], [, b]) => b - a)\r\n    .slice(0, 10);\r\n\r\n  // Sort cities by sessions\r\n  const sortedCities = data.cityBreakdown\r\n    .sort((a, b) => b.sessions - a.sessions)\r\n    .slice(0, 15);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* World Map Overview */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <GlobeAltIcon className=\"w-5 h-5 mr-2 text-blue-400\" />\r\n          Global Traffic Distribution\r\n        </h3>\r\n        \r\n        {/* Simple World Map Visualization */}\r\n        <div className=\"relative h-64 bg-gradient-to-br from-blue-900/20 to-purple-900/20 rounded-xl border border-gray-700/50 overflow-hidden\">\r\n          {/* World Map Background */}\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <div className=\"text-6xl text-gray-600/30\">🌍</div>\r\n          </div>\r\n          \r\n          {/* Traffic Points */}\r\n          {sortedCountries.slice(0, 8).map(([country, sessions], index) => {\r\n            const intensity = Math.min((sessions / Math.max(...sortedCountries.map(([, s]) => s))) * 100, 100);\r\n            const positions = [\r\n              'top-8 left-1/4', 'top-16 right-1/3', 'top-32 left-1/2', 'bottom-20 left-1/3',\r\n              'bottom-16 right-1/4', 'top-1/2 right-8', 'top-1/3 left-8', 'bottom-1/3 right-1/2'\r\n            ];\r\n            \r\n            return (\r\n              <div\r\n                key={country}\r\n                className={`absolute ${positions[index]} w-3 h-3 bg-blue-400 rounded-full animate-pulse`}\r\n                style={{\r\n                  boxShadow: `0 0 ${intensity * 0.5}px ${intensity * 0.3}px rgba(59, 130, 246, 0.6)`\r\n                }}\r\n                title={`${country}: ${sessions.toLocaleString()} sessions`}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        \r\n        <div className=\"mt-4 text-center text-sm text-gray-400\">\r\n          {sortedCountries.length} countries with active traffic\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Countries */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <MapPinIcon className=\"w-5 h-5 mr-2 text-green-400\" />\r\n          Top Countries by Sessions\r\n        </h3>\r\n        \r\n        <div className=\"space-y-3\">\r\n          {sortedCountries.map(([country, sessions], index) => {\r\n            const percentage = (sessions / Math.max(...sortedCountries.map(([, s]) => s))) * 100;\r\n            const flag = getCountryFlag(country);\r\n            \r\n            return (\r\n              <div key={country} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-gray-400 text-sm w-6\">#{index + 1}</span>\r\n                  <span className=\"text-2xl mr-3\">{flag}</span>\r\n                  <span className=\"text-white text-sm\">{country}</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-24 bg-gray-700 rounded-full h-2\">\r\n                    <div \r\n                      className=\"bg-gradient-to-r from-green-500 to-emerald-500 h-2 rounded-full transition-all duration-500\" \r\n                      style={{width: `${percentage}%`}}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"text-green-400 font-medium w-16 text-right\">{sessions.toLocaleString()}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Cities */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <BuildingOfficeIcon className=\"w-5 h-5 mr-2 text-purple-400\" />\r\n          Top Cities by Sessions\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n          {sortedCities.map((cityData, index) => (\r\n            <div key={`${cityData.city}-${cityData.country}`} className=\"p-3 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-gray-400 text-sm w-6\">#{index + 1}</span>\r\n                  <span className=\"text-white text-sm font-medium\">{cityData.city}</span>\r\n                </div>\r\n                <span className=\"text-purple-400 font-medium text-sm\">{cityData.sessions.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-400\">\r\n                {cityData.region !== 'Unknown' && cityData.region !== cityData.city && `${cityData.region}, `}\r\n                {cityData.country}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {sortedCities.length === 0 && (\r\n          <div className=\"text-center text-gray-400 py-8\">\r\n            No city data available\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Geographic Insights */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <GlobeAltIcon className=\"w-5 h-5 mr-2 text-yellow-400\" />\r\n          Geographic Insights\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-blue-400 mb-1\">{sortedCountries.length}</div>\r\n            <div className=\"text-gray-400 text-sm\">Countries</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-green-400 mb-1\">{sortedCities.length}</div>\r\n            <div className=\"text-gray-400 text-sm\">Cities</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-purple-400 mb-1\">\r\n              {sortedCountries.length > 0 ? \r\n                Math.round((sortedCountries[0][1] / Object.values(data.countryBreakdown).reduce((a, b) => a + b, 0)) * 100) : 0\r\n              }%\r\n            </div>\r\n            <div className=\"text-gray-400 text-sm\">Top Country Share</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get country flags\r\nfunction getCountryFlag(country: string): string {\r\n  const flagMap: Record<string, string> = {\r\n    'United States': '🇺🇸',\r\n    'India': '🇮🇳',\r\n    'United Kingdom': '🇬🇧',\r\n    'Canada': '🇨🇦',\r\n    'Germany': '🇩🇪',\r\n    'France': '🇫🇷',\r\n    'Australia': '🇦🇺',\r\n    'Japan': '🇯🇵',\r\n    'Brazil': '🇧🇷',\r\n    'Mexico': '🇲🇽',\r\n    'Italy': '🇮🇹',\r\n    'Spain': '🇪🇸',\r\n    'Netherlands': '🇳🇱',\r\n    'South Korea': '🇰🇷',\r\n    'Russia': '🇷🇺',\r\n    'China': '🇨🇳',\r\n    'Singapore': '🇸🇬',\r\n    'Sweden': '🇸🇪',\r\n    'Switzerland': '🇨🇭',\r\n    'Norway': '🇳🇴'\r\n  };\r\n  \r\n  return flagMap[country] || '🌍';\r\n}\r\n\r\nexport default GeographicAnalytics;\r\n","import React from 'react';\r\nimport { DevicePhoneMobileIcon, ComputerDesktopIcon, DeviceTabletIcon, ChartBarIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface DeviceData {\r\n  deviceBreakdown: Record<string, number>;\r\n  realTimeDevices?: Record<string, number>;\r\n}\r\n\r\ninterface DeviceAnalyticsProps {\r\n  data: DeviceData;\r\n  loading?: boolean;\r\n}\r\n\r\nconst DeviceAnalytics: React.FC<DeviceAnalyticsProps> = ({ data, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-16 h-16 border-4 border-green-500/30 border-t-green-500 rounded-full animate-spin mx-auto mb-4\"></div>\r\n            <div className=\"text-green-400\">Loading device data...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Sort devices by sessions\r\n  const sortedDevices = Object.entries(data.deviceBreakdown)\r\n    .sort(([, a], [, b]) => b - a);\r\n\r\n  // Calculate total sessions\r\n  const totalSessions = Object.values(data.deviceBreakdown).reduce((a, b) => a + b, 0);\r\n\r\n  // Get device icon and color\r\n  const getDeviceInfo = (device: string) => {\r\n    switch (device.toLowerCase()) {\r\n      case 'desktop':\r\n        return { icon: ComputerDesktopIcon, color: 'text-blue-400', bgColor: 'bg-blue-500/20' };\r\n      case 'mobile':\r\n        return { icon: DevicePhoneMobileIcon, color: 'text-green-400', bgColor: 'bg-green-500/20' };\r\n      case 'tablet':\r\n        return { icon: DeviceTabletIcon, color: 'text-purple-400', bgColor: 'bg-purple-500/20' };\r\n      default:\r\n        return { icon: DevicePhoneMobileIcon, color: 'text-gray-400', bgColor: 'bg-gray-500/20' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Device Overview */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <ChartBarIcon className=\"w-5 h-5 mr-2 text-green-400\" />\r\n          Device Distribution\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          {sortedDevices.map(([device, sessions]) => {\r\n            const percentage = totalSessions > 0 ? (sessions / totalSessions) * 100 : 0;\r\n            const deviceInfo = getDeviceInfo(device);\r\n            const IconComponent = deviceInfo.icon;\r\n            \r\n            return (\r\n              <div key={device} className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n                <div className={`w-16 h-16 ${deviceInfo.bgColor} rounded-full flex items-center justify-center mx-auto mb-3`}>\r\n                  <IconComponent className={`w-8 h-8 ${deviceInfo.color}`} />\r\n                </div>\r\n                <div className=\"text-2xl font-bold text-white mb-1\">{sessions.toLocaleString()}</div>\r\n                <div className=\"text-gray-400 text-sm mb-2\">{device}</div>\r\n                <div className=\"text-lg font-semibold text-green-400\">{percentage.toFixed(1)}%</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Device Usage Chart */}\r\n        <div className=\"space-y-3\">\r\n          {sortedDevices.map(([device, sessions]) => {\r\n            const percentage = totalSessions > 0 ? (sessions / totalSessions) * 100 : 0;\r\n            const deviceInfo = getDeviceInfo(device);\r\n            \r\n            return (\r\n              <div key={device} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`w-4 h-4 rounded-full ${deviceInfo.bgColor}`}></div>\r\n                  <span className=\"text-white text-sm capitalize\">{device}</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-32 bg-gray-700 rounded-full h-3\">\r\n                    <div \r\n                      className={`h-3 rounded-full transition-all duration-500 ${deviceInfo.bgColor}`}\r\n                      style={{width: `${percentage}%`}}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"text-green-400 font-medium w-16 text-right\">{percentage.toFixed(1)}%</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-time Device Activity */}\r\n      {data.realTimeDevices && Object.keys(data.realTimeDevices).length > 0 && (\r\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n            <DevicePhoneMobileIcon className=\"w-5 h-5 mr-2 text-yellow-400\" />\r\n            Real-time Device Activity\r\n          </h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {Object.entries(data.realTimeDevices)\r\n              .sort(([, a], [, b]) => b - a)\r\n              .map(([device, sessions]) => {\r\n                const deviceInfo = getDeviceInfo(device);\r\n                const IconComponent = deviceInfo.icon;\r\n                \r\n                return (\r\n                  <div key={device} className=\"p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className={`w-10 h-10 ${deviceInfo.bgColor} rounded-full flex items-center justify-center`}>\r\n                          <IconComponent className={`w-5 h-5 ${deviceInfo.color}`} />\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-white font-medium capitalize\">{device}</div>\r\n                          <div className=\"text-gray-400 text-sm\">Active sessions</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"text-2xl font-bold text-green-400\">{sessions.toLocaleString()}</div>\r\n                        <div className=\"text-xs text-gray-400\">sessions</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Device Insights */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <ChartBarIcon className=\"w-5 h-5 mr-2 text-blue-400\" />\r\n          Device Insights\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-blue-400 mb-1\">\r\n              {sortedDevices.length}\r\n            </div>\r\n            <div className=\"text-gray-400 text-sm\">Device Types</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-green-400 mb-1\">\r\n              {totalSessions.toLocaleString()}\r\n            </div>\r\n            <div className=\"text-gray-400 text-sm\">Total Sessions</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-purple-400 mb-1\">\r\n              {sortedDevices.length > 0 ? \r\n                Math.round((sortedDevices[0][1] / totalSessions) * 100) : 0\r\n              }%\r\n            </div>\r\n            <div className=\"text-gray-400 text-sm\">Top Device Share</div>\r\n          </div>\r\n          \r\n          <div className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n            <div className=\"text-2xl font-bold text-yellow-400 mb-1\">\r\n              {sortedDevices.length > 0 ? \r\n                Math.round(totalSessions / sortedDevices.length) : 0\r\n              }\r\n            </div>\r\n            <div className=\"text-gray-400 text-sm\">Avg Sessions/Device</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Device Performance Comparison */}\r\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\r\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n          <ChartBarIcon className=\"w-5 h-5 mr-2 text-purple-400\" />\r\n          Device Performance Comparison\r\n        </h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {sortedDevices.map(([device, sessions], index) => {\r\n            const percentage = totalSessions > 0 ? (sessions / totalSessions) * 100 : 0;\r\n            const deviceInfo = getDeviceInfo(device);\r\n            const IconComponent = deviceInfo.icon;\r\n            \r\n            return (\r\n              <div key={device} className=\"flex items-center justify-between p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className={`w-12 h-12 ${deviceInfo.bgColor} rounded-full flex items-center justify-center`}>\r\n                    <IconComponent className={`w-6 h-6 ${deviceInfo.color}`} />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-white font-medium capitalize\">{device}</div>\r\n                    <div className=\"text-gray-400 text-sm\">#{index + 1} in usage</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"text-right\">\r\n                  <div className=\"text-xl font-bold text-white\">{sessions.toLocaleString()}</div>\r\n                  <div className=\"text-sm text-gray-400\">sessions</div>\r\n                  <div className=\"text-lg font-semibold text-green-400\">{percentage.toFixed(1)}%</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceAnalytics;\r\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { \n  ChartBarIcon,\n  GlobeAltIcon,\n  UsersIcon,\n  EyeIcon,\n  ArrowTrendingUpIcon,\n  DevicePhoneMobileIcon,\n  ClockIcon\n} from '@heroicons/react/24/outline';\nimport GeographicAnalytics from './GeographicAnalytics';\nimport DeviceAnalytics from './DeviceAnalytics';\n\n// Google Analytics Configuration\nconst GA_MEASUREMENT_ID = import.meta.env.VITE_GA_MEASUREMENT_ID;\nconst GA_PROPERTY_ID = import.meta.env.VITE_GA_PROPERTY_ID;\nconst GA_CLIENT_ID = import.meta.env.VITE_GA_CLIENT_ID;\n\ninterface AnalyticsData {\n  pageViews: number;\n  uniqueVisitors: number;\n  bounceRate: number;\n  avgSessionDuration: number;\n  topPages: Array<{ page: string; views: number }>;\n  topSources: Array<{ source: string; sessions: number }>;\n  deviceBreakdown: Array<{ device: string; percentage: number }>;\n  recentActivity: Array<{ time: string; event: string; count: number }>;\n}\n\nconst GoogleAnalyticsTab: React.FC = () => {\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [gaData, setGaData] = useState<any>(null);\n\n\n\n  useEffect(() => {\n    // Check if GA is properly configured\n    if (GA_MEASUREMENT_ID && GA_PROPERTY_ID && GA_CLIENT_ID) {\n      // Fetch real Google Analytics data\n      fetchGoogleAnalyticsData();\n    } else {\n      setError('Google Analytics not properly configured. Please check your environment variables.');\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchGoogleAnalyticsData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Import and use the real Google Analytics service\n      const { googleAnalyticsService } = await import('../../services/googleAnalyticsService');\n      \n      // Check if GA is configured\n      if (!googleAnalyticsService.isConfigured()) {\n        setError('Google Analytics not properly configured');\n        return;\n      }\n      \n      // Initialize the service\n      const initialized = await googleAnalyticsService.initialize();\n      if (!initialized) {\n        setError('Failed to initialize Google Analytics service');\n        return;\n      }\n      \n      // Check authentication status\n      const authStatus = googleAnalyticsService.getAuthStatus();\n      \n      if (!authStatus.authenticated) {\n        // Don't automatically request authentication - let user click button\n        setError('Google Analytics authentication required. Click \"Connect\" to authenticate.');\n        return;\n      }\n      \n      // Get real GA data\n      const enhancedAnalytics = await googleAnalyticsService.getEnhancedAnalytics();\n      \n      // Get real-time data\n      const realTimeData = await googleAnalyticsService.getRealTimeData();\n      \n      // Transform data for UI\n      const realData: AnalyticsData = {\n        pageViews: enhancedAnalytics.totalPageViews,\n        uniqueVisitors: enhancedAnalytics.totalUsers,\n        bounceRate: enhancedAnalytics.avgBounceRate,\n        avgSessionDuration: enhancedAnalytics.avgSessionDuration,\n        topPages: realTimeData.topPages || [],\n        topSources: Object.entries(enhancedAnalytics.trafficSources).map(([source, sessions]) => ({\n          source,\n          sessions\n        })),\n        deviceBreakdown: [], // Will be populated when we add device dimension\n        recentActivity: [] // Will be populated when we add real-time events\n      };\n      \n      setAnalyticsData(realData);\n      setGaData(enhancedAnalytics);\n      \n      \n    } catch (error) {\n      console.error('Error fetching Google Analytics data:', error);\n      setError(error instanceof Error ? error.message : 'Failed to fetch Google Analytics data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const [activeTab, setActiveTab] = useState<'overview' | 'geographic' | 'devices' | 'traffic'>('overview');\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin mx-auto mb-4\"></div>\n              <div className=\"text-blue-400\">Loading Google Analytics...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"text-center\">\n            <div className=\"text-red-400 text-lg mb-4\">⚠️ Configuration Error</div>\n            <div className=\"text-gray-400 mb-4\">{error}</div>\n            \n            {/* Show connection button if it's an authentication error */}\n            {error.includes('authentication') && (\n              <div className=\"mt-4\">\n                <button\n                  onClick={async () => {\n                    try {\n                      setError(null);\n                      const { googleAnalyticsService } = await import('../../services/googleAnalyticsService');\n                      const authenticated = await googleAnalyticsService.requestAuthentication();\n                      if (authenticated) {\n                        // After successful authentication, fetch data\n                        fetchGoogleAnalyticsData();\n                      }\n                    } catch (error) {\n                      console.error('Authentication error:', error);\n                      setError('Authentication failed. Please try again.');\n                    }\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n                >\n                  🔐 Connect to Google Analytics\n                </button>\n              </div>\n            )}\n            \n            <div className=\"text-sm text-gray-500 mt-4\">\n              Required environment variables:\n              <br />\n              VITE_GA_MEASUREMENT_ID: {GA_MEASUREMENT_ID ? '✅ Set' : '❌ Missing'}\n              <br />\n              VITE_GA_PROPERTY_ID: {GA_PROPERTY_ID ? '✅ Set' : '❌ Missing'}\n              <br />\n              VITE_GA_CLIENT_ID: {GA_CLIENT_ID ? '✅ Set' : '❌ Missing'}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Connection Status */}\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-white flex items-center\">\n            <GlobeAltIcon className=\"w-5 h-5 mr-2 text-green-400\" />\n            Google Analytics Status\n          </h3>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n              <span className=\"text-green-400 text-sm\">Connected</span>\n            </div>\n            <button\n              onClick={async () => {\n                try {\n                  const { googleAnalyticsService } = await import('../../services/googleAnalyticsService');\n                  const authenticated = await googleAnalyticsService.requestAuthentication();\n                  if (authenticated) {\n                    // After successful authentication, fetch data\n                    fetchGoogleAnalyticsData();\n                  }\n                } catch (error) {\n                  console.error('Authentication error:', error);\n                  setError('Authentication failed. Please try again.');\n                }\n              }}\n              className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-lg transition-colors\"\n              title=\"Connect to Google Analytics\"\n            >\n              🔐 Connect\n            </button>\n            <button\n              onClick={fetchGoogleAnalyticsData}\n              className=\"px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-sm rounded-lg transition-colors\"\n              title=\"Refresh Google Analytics data\"\n            >\n              🔄 Refresh\n            </button>\n            <button\n              onClick={async () => {\n                try {\n                  const { googleAnalyticsService } = await import('../../services/googleAnalyticsService');\n                  const debugInfo = await googleAnalyticsService.debugDataAvailability();\n                  alert(`GA Debug Info:\\n\\nHas Token: ${debugInfo.hasToken}\\nHas Property ID: ${debugInfo.hasPropertyId}\\nCan Fetch Basic: ${debugInfo.canFetchBasic}\\nCan Fetch Advanced: ${debugInfo.canFetchAdvanced}\\n\\nBasic Data: ${JSON.stringify(debugInfo.basicDataSample, null, 2)}\\n\\nReal-time Test: ${JSON.stringify(debugInfo.realTimeTest, null, 2)}\\n\\nCheck console for full details.`);\n                } catch (error) {\n                  console.error('Debug failed:', error);\n                  alert('Debug failed. Check console for details.');\n                }\n              }}\n              className=\"px-3 py-1 bg-yellow-600 hover:bg-yellow-700 text-white text-sm rounded-lg transition-colors\"\n              title=\"Debug Google Analytics data availability\"\n            >\n              🐛 Debug\n            </button>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n          <div className=\"text-gray-400\">\n            <span className=\"text-white\">Measurement ID:</span> {GA_MEASUREMENT_ID}\n          </div>\n          <div className=\"text-gray-400\">\n            <span className=\"text-white\">Property ID:</span> {GA_PROPERTY_ID}\n          </div>\n          <div className=\"text-gray-400\">\n            <span className=\"text-white\">Client ID:</span> {GA_CLIENT_ID?.substring(0, 20)}...\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-2 border border-gray-800/50\">\n        <div className=\"flex space-x-1\">\n          {[\n            { id: 'overview', label: 'Overview', icon: '📊' },\n            { id: 'geographic', label: 'Geographic', icon: '🌍' },\n            { id: 'devices', label: 'Devices', icon: '📱' },\n            { id: 'traffic', label: 'Traffic', icon: '🚦' }\n          ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id as any)}\n              className={`flex-1 px-4 py-3 rounded-lg text-sm font-medium transition-all duration-200 ${\n                activeTab === tab.id\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'text-gray-400 hover:text-white hover:bg-gray-800/50'\n              }`}\n            >\n              <span className=\"mr-2\">{tab.icon}</span>\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-400 text-sm font-medium\">Page Views</p>\n              <p className=\"text-3xl font-bold text-white mt-2\">{analyticsData?.pageViews.toLocaleString()}</p>\n            </div>\n            <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center\">\n              <EyeIcon className=\"w-6 h-6 text-white\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-sm font-medium text-green-400\">+15%</span>\n            <span className=\"text-gray-400 text-sm ml-2\">from last month</span>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-400 text-sm font-medium\">Unique Visitors</p>\n              <p className=\"text-3xl font-bold text-white mt-2\">{analyticsData?.uniqueVisitors.toLocaleString()}</p>\n            </div>\n            <div className=\"w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center\">\n              <UsersIcon className=\"w-6 h-6 text-white\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-sm font-medium text-green-400\">+8%</span>\n            <span className=\"text-gray-400 text-sm ml-2\">from last month</span>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-400 text-sm font-medium\">Bounce Rate</p>\n              <p className=\"text-3xl font-bold text-white mt-2\">{analyticsData?.bounceRate}%</p>\n            </div>\n            <div className=\"w-12 h-12 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-xl flex items-center justify-center\">\n              <ArrowTrendingUpIcon className=\"w-6 h-6 text-white\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-sm font-medium text-red-400\">+2%</span>\n            <span className=\"text-gray-400 text-sm ml-2\">from last month</span>\n          </div>\n        </div>\n\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-400 text-sm font-medium\">Avg Session</p>\n              <p className=\"text-3xl font-bold text-white mt-2\">{analyticsData?.avgSessionDuration}s</p>\n            </div>\n            <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center\">\n              <ClockIcon className=\"w-6 h-6 text-white\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-sm font-medium text-green-400\">+12%</span>\n            <span className=\"text-gray-400 text-sm ml-2\">from last month</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Top Pages */}\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n            <ChartBarIcon className=\"w-5 h-5 mr-2 text-blue-400\" />\n            Top Pages\n          </h3>\n          <div className=\"space-y-3\">\n            {analyticsData?.topPages.map((page, index) => (\n              <div key={index} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                <div className=\"flex items-center\">\n                  <span className=\"text-gray-400 text-sm w-6\">#{index + 1}</span>\n                  <span className=\"text-white text-sm ml-2\">{page.page}</span>\n                </div>\n                <span className=\"text-blue-400 font-medium\">{page.views.toLocaleString()}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Device Breakdown */}\n        <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n            <DevicePhoneMobileIcon className=\"w-5 h-5 mr-2 text-green-400\" />\n            Device Breakdown\n          </h3>\n          <div className=\"space-y-3\">\n            {analyticsData?.deviceBreakdown.map((device, index) => (\n              <div key={index} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                <span className=\"text-white text-sm\">{device.device}</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-24 bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-gradient-to-r from-green-500 to-emerald-500 h-2 rounded-full\" \n                      style={{width: `${device.percentage}%`}}\n                    ></div>\n                  </div>\n                  <span className=\"text-green-400 font-medium w-12 text-right\">{device.percentage}%</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Traffic Sources */}\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n          <GlobeAltIcon className=\"w-5 h-5 mr-2 text-purple-400\" />\n          Traffic Sources\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          {analyticsData?.topSources.map((source, index) => (\n            <div key={index} className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\n              <div className=\"text-2xl font-bold text-white mb-1\">{source.sessions.toLocaleString()}</div>\n              <div className=\"text-gray-400 text-sm\">{source.source}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n          <ClockIcon className=\"w-5 h-5 mr-2 text-yellow-400\" />\n          Recent Activity\n        </h3>\n        <div className=\"space-y-3\">\n          {analyticsData?.recentActivity.map((activity, index) => (\n            <div key={index} className=\"flex items-center p-3 bg-gray-800/30 rounded-lg border border-gray-700/50\">\n              <div className=\"w-3 h-3 bg-blue-400 rounded-full mr-3\"></div>\n              <div className=\"flex-1\">\n                <div className=\"text-white font-medium\">{activity.event}</div>\n                <div className=\"text-gray-400 text-sm\">{activity.time}</div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-white text-sm\">{activity.count}</div>\n                <div className=\"text-xs text-gray-400\">events</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Enhanced Analytics Section */}\n      {gaData && (\n        <div className=\"space-y-6\">\n          <h3 className=\"text-xl font-semibold text-white border-b border-gray-700/50 pb-2\">Enhanced Analytics</h3>\n          \n          {/* Conversion Funnel */}\n          <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n            <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              <ChartBarIcon className=\"w-5 h-5 mr-2 text-blue-400\" />\n              Conversion Funnel\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"text-center p-4 bg-gray-800/30 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400 mb-1\">{gaData.conversionFunnel?.sessions?.toLocaleString() || 0}</div>\n                <div className=\"text-gray-400 text-sm\">Sessions</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-800/30 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400 mb-1\">{gaData.conversionFunnel?.pageViews?.toLocaleString() || 0}</div>\n                <div className=\"text-gray-400 text-sm\">Page Views</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-800/30 rounded-lg\">\n                <div className=\"text-2xl font-bold text-purple-400 mb-1\">{gaData.conversionFunnel?.waitlistSignups?.toLocaleString() || 0}</div>\n                <div className=\"text-gray-400 text-sm\">Waitlist Signups</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-800/30 rounded-lg\">\n                <div className=\"text-2xl font-bold text-orange-400 mb-1\">{gaData.conversionFunnel?.conversionRate ? `${gaData.conversionFunnel.conversionRate.toFixed(1)}%` : '0%'}</div>\n                <div className=\"text-gray-400 text-sm\">Conversion Rate</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced Metrics */}\n          <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n            <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              <ArrowTrendingUpIcon className=\"w-5 h-5 mr-2 text-green-400\" />\n              Enhanced Metrics\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                  <span className=\"text-gray-400\">GA to Waitlist Ratio</span>\n                  <span className=\"text-white font-medium\">{gaData.enhancedMetrics?.gaToWaitlistRatio ? `${gaData.enhancedMetrics.gaToWaitlistRatio.toFixed(2)}%` : '0%'}</span>\n                </div>\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                  <span className=\"text-gray-400\">Waitlist Conversion from GA</span>\n                  <span className=\"text-white font-medium\">{gaData.enhancedMetrics?.waitlistConversionFromGA ? `${gaData.enhancedMetrics.waitlistConversionFromGA.toFixed(2)}%` : '0%'}</span>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                  <span className=\"text-gray-400\">Returning User Signup Rate</span>\n                  <span className=\"text-white font-medium\">{gaData.enhancedMetrics?.returningUserSignupRate ? `${gaData.enhancedMetrics.returningUserSignupRate.toFixed(2)}%` : '0%'}</span>\n                </div>\n                <div className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                  <span className=\"text-gray-400\">Average Time to Signup</span>\n                  <span className=\"text-white font-medium\">{gaData.enhancedMetrics?.avgTimeToSignup ? `${gaData.enhancedMetrics.avgTimeToSignup.toFixed(1)}s` : 'N/A'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tab Content */}\n      {activeTab === 'geographic' && gaData && (\n        <GeographicAnalytics \n          data={{\n            countryBreakdown: gaData.countryBreakdown || {},\n            cityBreakdown: gaData.cityBreakdown || []\n          }}\n          loading={loading}\n        />\n      )}\n\n      {activeTab === 'devices' && gaData && (\n        <DeviceAnalytics \n          data={{\n            deviceBreakdown: gaData.deviceBreakdown || {},\n            realTimeDevices: gaData.realTimeDevices || {}\n          }}\n          loading={loading}\n        />\n      )}\n\n      {activeTab === 'traffic' && gaData && (\n        <div className=\"space-y-6\">\n          {/* Traffic Sources */}\n          <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              <GlobeAltIcon className=\"w-5 h-5 mr-2 text-purple-400\" />\n              Traffic Sources\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {Object.entries(gaData.trafficSources || {}).map(([source, sessions]) => (\n                <div key={source} className=\"text-center p-4 bg-gray-800/30 rounded-lg border border-gray-700/50\">\n                  <div className=\"text-2xl font-bold text-white mb-1\">{(sessions as number).toLocaleString()}</div>\n                  <div className=\"text-gray-400 text-sm\">{source}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Top Pages */}\n          <div className=\"bg-gray-900/50 backdrop-blur-xl rounded-2xl p-6 border border-gray-800/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              <ChartBarIcon className=\"w-5 h-5 mr-2 text-blue-400\" />\n              Top Pages\n            </h3>\n            <div className=\"space-y-3\">\n              {gaData.topPages?.map((page: any, index: number) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-gray-400 text-sm w-6\">#{index + 1}</span>\n                    <span className=\"text-white text-sm ml-2\">{page.page}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"text-blue-400 font-medium\">{page.views.toLocaleString()}</span>\n                    <span className=\"text-gray-400 text-sm\">views</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Google Analytics Integration Note */}\n      <div className=\"bg-blue-900/20 backdrop-blur-xl rounded-2xl p-6 border border-blue-800/50\">\n        <div className=\"text-center\">\n          <div className=\"text-blue-400 text-lg mb-2\">🔗 Google Analytics Integration</div>\n          <div className=\"text-gray-400 text-sm mb-4\">\n            This dashboard displays real analytics data from your Google Analytics 4 property.\n            <br />\n            Data is fetched directly from the GA4 API using OAuth2 authentication.\n          </div>\n          <div className=\"text-xs text-gray-500\">\n            Measurement ID: {GA_MEASUREMENT_ID} | Property ID: {GA_PROPERTY_ID}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleAnalyticsTab;\n"],"file":"assets/GoogleAnalyticsTab-BoJhxM6S.js"}